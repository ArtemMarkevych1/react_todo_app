{"version":3,"sources":["Components/NewTodo/NewTodo.js","Components/PropTypes/PropTypes.js","Components/TodoItem/TodoItem.js","Components/TodoList/TodoList.js","Components/TodosFilter/TodosFilter.js","App.js","index.js"],"names":["uuidv1","PropTypes","func","string","bool","arrayOf","shape","title","id","completed","require","NewTodo","state","titleOfTodo","handleChangeInput","target","setState","value","replace","handleInputTodo","event","preventDefault","addNewTodo","props","this","className","onSubmit","placeholder","onChange","autoFocus","React","Component","TodoItem","isEditing","editedTitle","todoTitle","handleDoubleClick","handleChangeEdit","onEditChange","handleEditSubmit","handleDoubleClickEditTitle","todoId","handleDeleteTodo","todoStatus","handleTodoStatus","liClassName","cx","editing","type","e","onBlur","checked","onDoubleClick","htmlFor","onClick","TodoList","todosList","length","map","key","TodosFilter","handleButtonChange","originalTodos","buttonSelected","handleDeleteAllCompleted","buttonClearStyles","disable","some","todo","footerStyles","hidden","filter","href","App","todos","handleAddNewTodo","prevState","filmTitle","mapFuncAddTitle","arrFilter","mapFuncCompletedTodo","handleCompletedAll","filterFunc","arr","every","JSON","parse","localStorage","getItem","setItem","stringify","style","display","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cbd10142.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NewTodoProps } from '../PropTypes/PropTypes';\r\n\r\nconst uuidv1 = require('uuid/v1');\r\n\r\nclass NewTodo extends React.Component {\r\n  state = {\r\n    titleOfTodo: '',\r\n  }\r\n\r\n  handleChangeInput = ({ target }) => {\r\n    this.setState({\r\n      titleOfTodo: target.value.replace(/^\\s/, ''),\r\n    });\r\n  }\r\n\r\n  handleInputTodo = (event) => {\r\n    event.preventDefault();\r\n    const { addNewTodo } = this.props;\r\n    const { titleOfTodo } = this.state;\r\n\r\n    addNewTodo({\r\n      title: titleOfTodo,\r\n      id: uuidv1(),\r\n      completed: false,\r\n    });\r\n\r\n    this.setState({\r\n      titleOfTodo: '',\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { titleOfTodo } = this.state;\r\n\r\n    return (\r\n      <header className=\"header\">\r\n        <h1>todos</h1>\r\n        <form onSubmit={this.handleInputTodo}>\r\n          <input\r\n            className=\"new-todo\"\r\n            placeholder=\"What needs to be done?\"\r\n            onChange={this.handleChangeInput}\r\n            value={titleOfTodo}\r\n            autoFocus\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nNewTodo.propTypes = NewTodoProps;\r\n\r\nexport default NewTodo;","import PropTypes from 'prop-types';\r\n\r\nexport const NewTodoProps = {\r\n  addNewTodo: PropTypes.func,\r\n};\r\n\r\nexport const TodoItemProps = {\r\n  todoTitle: PropTypes.string,\r\n  todoStatus: PropTypes.bool,\r\n  todoId: PropTypes.string,\r\n  handleTodoStatus: PropTypes.func,\r\n  handleDeleteTodo: PropTypes.func,\r\n};\r\n\r\nexport const TodoListProps = {\r\n  todosList: PropTypes.arrayOf(PropTypes.shape({\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    completed: PropTypes.bool,\r\n  })),\r\n  handleTodoStatus: PropTypes.func,\r\n  handleDeleteTodo: PropTypes.func,\r\n  handleDoubleClickEditTitle: PropTypes.func,\r\n};\r\n\r\nexport const TodosFilterProps = {\r\n  handleButtonChange: PropTypes.func,\r\n  originalTodos: PropTypes.arrayOf(PropTypes.shape({\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    completed: PropTypes.bool,\r\n  })),\r\n  todosList: PropTypes.arrayOf(PropTypes.shape({\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    completed: PropTypes.bool,\r\n  })),\r\n  buttonSelected: PropTypes.string,\r\n  handleDeleteAllCompleted: PropTypes.func,\r\n};","import React from 'react';\r\nimport cx from 'classnames';\r\nimport { TodoItemProps } from '../PropTypes/PropTypes';\r\n\r\nclass TodoItem extends React.Component {\r\n  state = {\r\n    isEditing: false,\r\n    editedTitle: this.props.todoTitle,\r\n  }\r\n\r\n  handleDoubleClick = () => {\r\n    this.setState({\r\n      isEditing: true,\r\n    });\r\n  }\r\n\r\n  handleChangeEdit = () => {\r\n    this.setState({\r\n      isEditing: false,\r\n    });\r\n  }\r\n\r\n  onEditChange = ({ target }) => {\r\n    this.setState({\r\n      editedTitle: target.value,\r\n    });\r\n  }\r\n\r\n  handleEditSubmit = () => {\r\n    const {\r\n      handleDoubleClickEditTitle,\r\n      todoId,\r\n      handleDeleteTodo,\r\n    } = this.props;\r\n    const { editedTitle } = this.state;\r\n\r\n    this.setState({\r\n      isEditing: false,\r\n    });\r\n    if (editedTitle !== '') {\r\n      handleDoubleClickEditTitle(editedTitle, todoId);\r\n    } else {\r\n      handleDeleteTodo(todoId);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      todoTitle,\r\n      todoStatus,\r\n      todoId,\r\n      handleTodoStatus,\r\n      handleDeleteTodo,\r\n    } = this.props;\r\n    const { editedTitle } = this.state;\r\n    const liClassName = cx({\r\n      editing: this.state.isEditing,\r\n      completed: todoStatus,\r\n    });\r\n\r\n    return (\r\n      <li className={liClassName}>\r\n        { !this.state.isEditing\r\n          ? (\r\n            <div className=\"view\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle\"\r\n                id={todoId}\r\n                checked={todoStatus}\r\n                onChange={() => handleTodoStatus(todoId)}\r\n              />\r\n              <p\r\n                className=\"label\"\r\n                onDoubleClick={this.handleDoubleClick}\r\n                htmlFor={todoId}\r\n              >\r\n                {todoTitle}\r\n              </p>\r\n              <button\r\n                type=\"button\"\r\n                className=\"destroy\"\r\n                onClick={() => handleDeleteTodo(todoId)}\r\n              />\r\n            </div>\r\n          )\r\n          : (\r\n            <form\r\n              onSubmit={this.handleEditSubmit}\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                className=\"edit\"\r\n                value={editedTitle}\r\n                onChange={e => this.onEditChange(e)}\r\n                onBlur={this.handleChangeEdit}\r\n                autoFocus\r\n              />\r\n            </form>\r\n          )\r\n        }\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nTodoItem.propTypes = TodoItemProps;\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport TodoItem from '../TodoItem/TodoItem';\r\nimport { TodoListProps } from '../PropTypes/PropTypes';\r\n\r\nconst TodoList = ({\r\n  todosList,\r\n  handleTodoStatus,\r\n  handleDeleteTodo,\r\n  handleDoubleClickEditTitle,\r\n}) => (\r\n  <ul className=\"todo-list\">\r\n    {todosList.length\r\n      ? todosList\r\n        .map(({ title, completed, id }) => (\r\n          <TodoItem\r\n            handleDoubleClickEditTitle={handleDoubleClickEditTitle}\r\n            todoStatus={completed}\r\n            todoTitle={title}\r\n            handleTodoStatus={handleTodoStatus}\r\n            handleDeleteTodo={handleDeleteTodo}\r\n            key={id}\r\n            todoId={id}\r\n            todosList={todosList}\r\n          />\r\n        ))\r\n      : null\r\n    }\r\n  </ul>\r\n);\r\n\r\nTodoList.propTypes = TodoListProps;\r\n\r\nexport default TodoList;","import cx from 'classnames';\r\nimport React from 'react';\r\nimport { TodosFilterProps } from '../PropTypes/PropTypes';\r\n\r\nconst TodosFilter = ({\r\n  handleButtonChange,\r\n  todosList, originalTodos, buttonSelected, handleDeleteAllCompleted,\r\n}) => {\r\n  const buttonClearStyles = cx('clear-completed', {\r\n    disable: !todosList.some(todo => todo.completed),\r\n  });\r\n  const footerStyles = cx('footer', {\r\n    hidden: !originalTodos.length,\r\n  });\r\n\r\n  return (\r\n    <footer className={footerStyles}>\r\n      <span className=\"todo-count\">\r\n        {originalTodos.length && originalTodos\r\n          .filter(todo => !todo.completed).length }\r\n        {' items left'}\r\n      </span>\r\n\r\n      <ul className=\"filters\">\r\n        <li>\r\n          <a\r\n            href=\"#/\"\r\n            className={buttonSelected === 'all' ? 'selected' : ''}\r\n            onClick={() => handleButtonChange('all')}\r\n          >\r\n            All\r\n          </a>\r\n        </li>\r\n\r\n        <li>\r\n          <a\r\n            href=\"#/active\"\r\n            onClick={() => handleButtonChange('active')}\r\n            className={buttonSelected === 'active' ? 'selected' : ''}\r\n          >\r\n            Active\r\n          </a>\r\n        </li>\r\n\r\n        <li>\r\n          <a\r\n            href=\"#/completed\"\r\n            onClick={() => handleButtonChange('completed')}\r\n            className={buttonSelected === 'completed' ? 'selected' : ''}\r\n          >\r\n            Completed\r\n          </a>\r\n        </li>\r\n      </ul>\r\n\r\n      <button\r\n        type=\"button\"\r\n        className={buttonClearStyles}\r\n        onClick={handleDeleteAllCompleted}\r\n      >\r\n        Clear completed\r\n      </button>\r\n    </footer>\r\n  );\r\n};\r\n\r\nTodosFilter.propTypes = TodosFilterProps;\r\n\r\nexport default TodosFilter;","import React from 'react';\nimport NewTodo from './Components/NewTodo/NewTodo';\nimport TodoList from './Components/TodoList/TodoList';\nimport TodosFilter from './Components/TodosFilter/TodosFilter';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    originalTodos: [],\n    buttonSelected: 'all',\n  }\n\n  componentDidMount() {\n    this.setState({\n      todos: JSON.parse(localStorage.getItem('todosList')) || [],\n      originalTodos: JSON\n        .parse(localStorage.getItem('originalTodosList')) || [],\n    });\n\n    this.handleButtonChange(this.state.buttonSelected);\n  }\n\n  componentDidUpdate(prevState) {\n    const { todos, originalTodos } = this.state;\n\n    if (todos !== prevState.todos) {\n      localStorage.setItem('originalTodosList', JSON.stringify(originalTodos));\n      localStorage.setItem('todosList', JSON.stringify(todos));\n    }\n  }\n\n  handleAddNewTodo = (todo) => {\n    if (todo.title) {\n      this.setState(prevState => ({\n        todos: [...prevState.todos, todo],\n        originalTodos: [...prevState.originalTodos, todo],\n      }));\n    }\n\n    this.handleButtonChange(this.state.buttonSelected);\n  }\n\n  handleDoubleClickEditTitle = (filmTitle, todoId) => {\n    const mapFuncAddTitle = todo => (\n      todo.id === todoId\n        ? { ...todo, title: filmTitle }\n        : todo\n    );\n\n    this.setState(prevState => ({\n      todos: prevState.todos\n        .map(mapFuncAddTitle),\n      originalTodos: prevState.originalTodos\n        .map(mapFuncAddTitle),\n    }));\n  }\n\n  handleDeleteTodo = (todoId) => {\n    const arrFilter = todo => (\n      todo.id !== todoId\n    );\n\n    this.setState(prevState => ({\n      todos: prevState.todos\n        .filter(arrFilter),\n      originalTodos: prevState.originalTodos\n        .filter(arrFilter),\n    }));\n  }\n\n  handleTodoStatus = (todoId) => {\n    const mapFuncCompletedTodo = todo => (\n      todo.id === todoId\n        ? { ...todo, completed: !todo.completed }\n        : todo\n    );\n\n    this.setState(prevState => ({\n      todos: prevState.todos\n        .map(mapFuncCompletedTodo),\n      originalTodos: prevState.originalTodos\n        .map(mapFuncCompletedTodo),\n    }));\n\n    this.handleButtonChange(this.state.buttonSelected);\n  }\n\n  handleCompletedAll = () => {\n    const filterFunc = arr => (\n      arr.map(todo => ({\n        ...todo,\n        completed: !arr.every(({ completed }) => completed),\n      }))\n    );\n\n    this.setState(prevState => ({\n      todos: filterFunc(prevState.todos),\n      originalTodos: filterFunc(prevState.originalTodos),\n    }));\n\n    this.handleButtonChange(this.state.buttonSelected);\n  }\n\n  handleButtonChange = (value) => {\n    switch (value) {\n      case 'active':\n        this.setState(prevState => ({\n          todos: prevState.originalTodos.filter(todo => !todo.completed),\n          buttonSelected: 'active',\n        }));\n        break;\n      case 'completed':\n        this.setState(prevState => ({\n          todos: prevState.originalTodos.filter(todo => todo.completed),\n          buttonSelected: 'completed',\n        }));\n        break;\n      case 'all':\n      default:\n        this.setState(prevState => ({\n          todos: [...prevState.originalTodos],\n          buttonSelected: 'all',\n        }));\n    }\n  }\n\n  handleDeleteAllCompleted = () => {\n    const filterFunc = arr => (\n      arr.filter(todo => !todo.completed)\n    );\n\n    this.setState(prevState => ({\n      todos: filterFunc(prevState.todos),\n      originalTodos: filterFunc(prevState.originalTodos),\n    }));\n  }\n\n  render() {\n    const {\n      todos, originalTodos, buttonSelected,\n    } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <NewTodo addNewTodo={this.handleAddNewTodo} />\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onChange={this.handleCompletedAll}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <TodoList\n            todosList={todos}\n            handleTodoStatus={this.handleTodoStatus}\n            handleDeleteTodo={this.handleDeleteTodo}\n            handleDoubleClickEditTitle={this.handleDoubleClickEditTitle}\n          />\n        </section>\n        <TodosFilter\n          handleButtonChange={this.handleButtonChange}\n          originalTodos={originalTodos}\n          todosList={todos}\n          buttonSelected={buttonSelected}\n          handleDeleteAllCompleted={this.handleDeleteAllCompleted}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}